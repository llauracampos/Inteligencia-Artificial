# -*- coding: utf-8 -*-
"""Questão_3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gzckl1Qhvw9wTKmsfWrGBknLjQCNCY1b
"""



import pandas as pd
import seaborn as sn
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.decomposition import PCA
from sklearn.preprocessing import MinMaxScaler

data = pd.read_csv("drinking_water_potability.csv")
print(data)

#Preenche todos os valores faltantes por zero

data_zero = data.fillna(0, inplace=False)
print(data_zero)

# análise de correlação

correlation = data_zero.corr()
correlation

# plot da matriz de correlação

try:
   plot = sn.heatmap(correlation, annot = True, fmt=".1f", linewidths=.6)
   plot
except ValueError:  
    pass

#Normalização da base de dados

normalized_dataset = MinMaxScaler().fit_transform(data_zero) 

print(normalized_dataset)

#Adição de rotulos

data_labels = pd.DataFrame(normalized_dataset, columns=['ph','Hardness','Solids','Chloramines','Sulfate','Conductivity','Organic_carbon','Trihalomethanes','Turbidity','Potability']) 
print(data_labels)

#Separação dos atributos

array_x = np.array(data_labels.drop('Potability',1))
array_y = np.array(data_labels['Potability'])

print(array_x)
print(array_y)

#Execução do PCA para 5
x = array_x
y = array_y

pca = PCA(n_components=5)
pca.fit(x)
print(pca.explained_variance_ratio_)
print(pca.singular_values_)

x_5 = pca.transform(x)
data_labels = pd.DataFrame(x_5, columns=['pc1','pc2','pc3','pc4','pc5'])
data_labels['target'] = y

sns.pairplot(
     data_labels, vars = ['pc1','pc2', 'pc3', 'pc4', 'pc5'],
     hue='target', diag_kind="hist")
plt.show()

#Execução do PCA para 10
x = array_x
y = array_y

pca2 = PCA(n_components=8)
pca2.fit(x)
print(pca2.explained_variance_ratio_)
print(pca2.singular_values_)

x_8 = pca2.transform(x)
data_labels = pd.DataFrame(x_8, columns=['pc1','pc2','pc3','pc4','pc5', 'pc6', 'pc7', 'pc8'])
data_labels['target'] = y

sns.pairplot(
     data_labels, vars = ['pc1','pc2', 'pc3', 'pc4', 'pc5', 'pc6', 'pc7', 'pc8'],
     hue='target', diag_kind="hist")
plt.show()